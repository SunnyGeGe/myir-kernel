/*
 * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;

#include "am33xx.dtsi"
#include <dt-bindings/interrupt-controller/irq.h>

/ {
	model = "MYIR MYT C335x NAND";
	compatible = "ti,myt_c335x", "ti,am33xx";

	cpus {
		cpu@0 {
			cpu0-supply = <&vdd_core>;
		};
	};

	memory {
		device_type = "memory";
		reg = <0x80000000 0x20000000>; /* 512 MB */
	};

	vbat: fixedregulator@0 {
		compatible = "regulator-fixed";
		regulator-name = "vbat";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-boot-on;
		regulator-always-on;
	};
	
	vdd_3v3: fixedregulator@1{
		compatible = "regulator-fixed";
		regulator-name = "vdd_3v3";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		vin-supply = <&vbat>;
		regulator-boot-on;
		regulator-always-on;
		};
	
	vdd_1v8: fixedregulator@2{
		compatible = "regulator-fixed";
		regulator-name = "vdd_1v8";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		vin-supply = <&vdd_3v3>;
		regulator-boot-on;
		regulator-always-on;
		};
	
	vdd_core: fixedregulator@4{
		compatible = "regulator-fixed";
		regulator-name = "vdd_core";
		vin-supply = <&vdd_3v3>;
		regulator-boot-on;
		regulator-always-on;
		};
	
	vdd_mpu: fixedregulator@5{
		compatible = "regulator-fixed";
		regulator-name = "vdd_mpu";
		vin-supply = <&vdd_3v3>;
		regulator-boot-on;
		regulator-always-on;
		};
	
	vdd_adc: fixedregulator@6{
		compatible = "regulator-fixed";
		regulator-name = "vdd_adc";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		vin-supply = <&vdd_1v8>;
		regulator-boot-on;
		regulator-always-on;
		};
	
	vdd_rtc: fixedregulator@7{
		compatible = "regulator-fixed";
		regulator-name = "vdd_rtc";
		regulator-min-microvolt = <1800000>;
		regulator-max-microvolt = <1800000>;
		vin-supply = <&vdd_1v8>;
		regulator-boot-on;
		regulator-always-on;
		};


	gpio-leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&leds_pins>;

		D3 {
			label = "myc:green:user1";
			gpios = <&gpio3 18 GPIO_ACTIVE_LOW>;
			linux,default-trigger = "cpu0";
			default-state = "off";
		};

//		PWM1 {
//			label = "pwm1";
//			gpios = <&gpio0 2 GPIO_ACTIVE_LOW>;
//			default-state = "off";
//		};

		PWM2 {
			label = "pwm2";
			gpios = <&gpio0 3 GPIO_ACTIVE_LOW>;
			default-state = "off";
		};
	};

	watchdog: watchdog {
		/* CAT823T */
		compatible = "linux,wdt-gpio";
		pinctrl-names = "default";
		pinctrl-0 = <&watchdog_pins>;
		gpios = <&gpio3 19 GPIO_ACTIVE_LOW>;
		hw_algo = "toggle";
		always-running;
		hw_margin_ms = <1000>;
	};
	
	aliases { mdio-gpio0 = &mdio0; };
	mdio0: mdio{
		compatible = "virtual,mdio-gpio";
		pinctrl-names = "default", "sleep";
		pinctrl-0 = <&davinci_mdio_default>;
		pinctrl-1 = <&davinci_mdio_sleep>;
	
		#address-cells = <1>;
		#size-cells = <0>;
		gpios = <&gpio0 1  GPIO_ACTIVE_HIGH>, <&gpio0 0 GPIO_ACTIVE_HIGH>; 
	}; 
	
	
};

&am33xx_pinmux {
	pinctrl-names = "default";
	pinctrl-0 = <&gpio_pins_default>;
	
	watchdog_pins: pinmux_watchdog_pins{
		pinctrl-single,pins = <0x1A4 ( PIN_OUTPUT_PULLDOWN | MUX_MODE7 ) /* (C13) mcasp0_fsr.gpio3[19] */>;
	};


	gpio_pins_default: gpio_pins_default {
	pinctrl-single,pins = <
// 0
//		0x148 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (M17) mdio_data.gpio0[0] */
//		0x14c ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (M18) mdio_clk.gpio0[1] */
		0x150 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (A17) spi0_sclk.gpio0[2] */
//		0x154 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (B17) spi0_d0.gpio0[3] */
		0x158 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (B16) spi0_d1.gpio0[4] */
		0x15c ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (A16) spi0_cs0.gpio0[5] */
		0x160 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (C15) spi0_cs1.gpio0[6] */
		0x164 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (C18) eCAP0_in_PWM0_out.gpio0[7] */
		0xd0 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (V2) lcd_data12.gpio0[8] */
		0xd4 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (V3) lcd_data13.gpio0[9] */
		0xd8 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (V4) lcd_data14.gpio0[10] */
		0xdc ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (T5) lcd_data15.gpio0[11] */
		0x178 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (D18) uart1_ctsn.gpio0[12] */
		0x17c ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (D17) uart1_rtsn.gpio0[13] */
		0x180 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (D16) uart1_rxd.gpio0[14] */
		0x184 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (D15) uart1_txd.gpio0[15] */
		0x21c ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (F16) USB0_DRVVBUS.gpio0[18] */
		0x1b0 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (A15) xdma_event_intr0.gpio0[19] */
//		0x1b4 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (D14) xdma_event_intr1.gpio0[20] */
		0x20 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (U10) gpmc_ad8.gpio0[22] */
		0x24 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (T10) gpmc_ad9.gpio0[23] */
		0x28 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (T11) gpmc_ad10.gpio0[26] */
		0x2c ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (U12) gpmc_ad11.gpio0[27] */
		0x144 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (H18) rmii1_refclk.gpio0[29] */
//		0x70 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (T17) gpmc_wait0.gpio0[30] */
//		0x74 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (U17) gpmc_wpn.gpio0[31] */
// 1
//		0x1c ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (T9) gpmc_ad7.gpio1[7] */
		0x168 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (E18) uart0_ctsn.gpio1[8] */
		0x16c ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (E17) uart0_rtsn.gpio1[9] */
		0x30 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (T12) gpmc_ad12.gpio1[12] */
		0x34 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (R12) gpmc_ad13.gpio1[13] */
		0x38 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (V13) gpmc_ad14.gpio1[14] */
		0x3c ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (U13) gpmc_ad15.gpio1[15] */
		0x40 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (R13) gpmc_a0.gpio1[16] */
		0x44 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (V14) gpmc_a1.gpio1[17] */
		0x48 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (U14) gpmc_a2.gpio1[18] */
		0x4c ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (T14) gpmc_a3.gpio1[19] */
		0x50 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (R14) gpmc_a4.gpio1[20] */
		0x54 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (V15) gpmc_a5.gpio1[21] */
		0x58 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (U15) gpmc_a6.gpio1[22] */
		0x5c ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (T15) gpmc_a7.gpio1[23] */
		0x60 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (V16) gpmc_a8.gpio1[24] */
		0x64 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (U16) gpmc_a9.gpio1[25] */
		0x68 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (T16) gpmc_a10.gpio1[26] */
		0x6c ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (V17) gpmc_a11.gpio1[27] */
// 2
		0x88 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (T13) gpmc_csn3.gpio2[0] */
		0x8c ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (V12) gpmc_clk.gpio2[1] */
//		0x90 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (R7) gpmc_advn_ale.gpio2[2] */
//		0x94 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (T7) gpmc_oen_ren.gpio2[3] */
//		0x98 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (U6) gpmc_wen.gpio2[4] */
//		0x9c ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (T6) gpmc_be0n_cle.gpio2[5] */
		0xa0 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (R1) lcd_data0.gpio2[6] */
		0xa4 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (R2) lcd_data1.gpio2[7] */
		0xa8 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (R3) lcd_data2.gpio2[8] */
		0xac ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (R4) lcd_data3.gpio2[9] */
		0xb0 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (T1) lcd_data4.gpio2[10] */
		0xb4 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (T2) lcd_data5.gpio2[11] */
		0xb8 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (T3) lcd_data6.gpio2[12] */
		0xbc ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (T4) lcd_data7.gpio2[13] */
		0xc0 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (U1) lcd_data8.gpio2[14] */
		0xc4 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (U2) lcd_data9.gpio2[15] */
		0xc8 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (U3) lcd_data10.gpio2[16] */
		0xcc ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (U4) lcd_data11.gpio2[17] */
		0xe0 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (U5) lcd_vsync.gpio2[22] */
		0xe4 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (R5) lcd_hsync.gpio2[23] */
		0xe8 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (V5) lcd_pclk.gpio2[24] */
		0xec ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (R6) lcd_ac_bias_en.gpio2[25] */
// 3
		0x108 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (H16) gmii1_col.gpio3[0] */
		0x10c ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (H17) gmii1_crs.gpio3[1] */
		0x110 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (J15) gmii1_rxer.gpio3[2] */
		0x1e4 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (C14) EMU0.gpio3[7] */
		0x1e8 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (B14) EMU1.gpio3[8] */
		0x234 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (F15) USB1_DRVVBUS.gpio3[13] */
		0x190 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (A13) mcasp0_aclkx.gpio3[14] */
		0x194 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (B13) mcasp0_fsx.gpio3[15] */
		0x198 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (D12) mcasp0_axr0.gpio3[16] */
		0x19c ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (C12) mcasp0_ahclkr.gpio3[17] */
//		0x1a0 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (B12) mcasp0_aclkr.gpio3[18] */
//		0x1a4 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (C13) mcasp0_fsr.gpio3[19] */
		0x1a8 ( PIN_INPUT_PULLUP | MUX_MODE7 ) /* (D13) mcasp0_axr1.gpio3[20] */
	>;
};
	leds_pins: pinmux_leds_pins {
		pinctrl-single,pins = <
//		0x150 ( PIN_OUTPUT_PULLDOWN | MUX_MODE7 ) /* (A17) spi0_sclk.gpio0[2] */
		0x154 ( PIN_OUTPUT_PULLDOWN | MUX_MODE7 ) /* (B17) spi0_d0.gpio0[3] */
		0x1A0 ( PIN_OUTPUT_PULLDOWN | MUX_MODE7)  /* (B12) mcasp0_aclkr.gpio3[18] */
		>;
	};
	
	i2c0_pins: pinmux_i2c0_pins {
		pinctrl-single,pins = <
			0x188 (PIN_INPUT_PULLUP | MUX_MODE0)	/* i2c0_sda.i2c0_sda */
			0x18c (PIN_INPUT_PULLUP | MUX_MODE0)	/* i2c0_scl.i2c0_scl */
		>;
	};

	uart0_pins: pinmux_uart0_pins {
		pinctrl-single,pins = <
			0x170 (PIN_INPUT_PULLUP | MUX_MODE0)	/* uart0_rxd.uart0_rxd */
			0x174 (PIN_OUTPUT_PULLDOWN | MUX_MODE0)	/* uart0_txd.uart0_txd */
		>;
	};

	nandflash_pins_default: nandflash_pins_default {
		pinctrl-single,pins = <
			0x0 (PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad0.gpmc_ad0 */
			0x4 (PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad1.gpmc_ad1 */
			0x8 (PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad2.gpmc_ad2 */
			0xc (PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad3.gpmc_ad3 */
			0x10 (PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad4.gpmc_ad4 */
			0x14 (PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad5.gpmc_ad5 */
			0x18 (PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad6.gpmc_ad6 */
			0x1c (PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_ad7.gpmc_ad7 */
			0x70 (PIN_INPUT_PULLUP | MUX_MODE0)	/* gpmc_wait0.gpmc_wait0 */
			0x74 (PIN_INPUT_PULLUP | MUX_MODE7)	/* gpmc_wpn.gpio0_30 */
			0x7c (PIN_OUTPUT | MUX_MODE0)		/* gpmc_csn0.gpmc_csn0  */
			0x90 (PIN_OUTPUT | MUX_MODE0)		/* gpmc_advn_ale.gpmc_advn_ale */
			0x94 (PIN_OUTPUT | MUX_MODE0)		/* gpmc_oen_ren.gpmc_oen_ren */
			0x98 (PIN_OUTPUT | MUX_MODE0)		/* gpmc_wen.gpmc_wen */
			0x9c (PIN_OUTPUT | MUX_MODE0)		/* gpmc_be0n_cle.gpmc_be0n_cle */
		>;
	};

	nandflash_pins_sleep: nandflash_pins_sleep {
		pinctrl-single,pins = <
			0x0 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x4 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x8 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0xc (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x10 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x14 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x18 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x1c (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x70 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x74 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x7c (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x90 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x94 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x98 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x9c (PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

	cpsw_default: cpsw_default {
		pinctrl-single,pins = <
			/* Slave 1 */
			0x114 (PIN_OUTPUT_PULLDOWN | MUX_MODE2)	/* mii1_txen.rgmii1_tctl */
			0x118 (PIN_INPUT_PULLDOWN | MUX_MODE2)	/* mii1_rxdv.rgmii1_rctl */
			0x11c (PIN_OUTPUT_PULLDOWN | MUX_MODE2)	/* mii1_txd3.rgmii1_td3 */
			0x120 (PIN_OUTPUT_PULLDOWN | MUX_MODE2)	/* mii1_txd2.rgmii1_td2 */
			0x124 (PIN_OUTPUT_PULLDOWN | MUX_MODE2)	/* mii1_txd1.rgmii1_td1 */
			0x128 (PIN_OUTPUT_PULLDOWN | MUX_MODE2)	/* mii1_txd0.rgmii1_td0 */
			0x12c (PIN_OUTPUT_PULLDOWN | MUX_MODE2)	/* mii1_txclk.rgmii1_tclk */
			0x130 (PIN_INPUT_PULLDOWN | MUX_MODE2)	/* mii1_rxclk.rgmii1_rclk */
			0x134 (PIN_INPUT_PULLDOWN | MUX_MODE2)	/* mii1_rxd3.rgmii1_rd3 */
			0x138 (PIN_INPUT_PULLDOWN | MUX_MODE2)	/* mii1_rxd2.rgmii1_rd2 */
			0x13c (PIN_INPUT_PULLDOWN | MUX_MODE2)	/* mii1_rxd1.rgmii1_rd1 */
			0x140 (PIN_INPUT_PULLDOWN | MUX_MODE2)	/* mii1_rxd0.rgmii1_rd0 */
		>;
	};

	cpsw_sleep: cpsw_sleep {
		pinctrl-single,pins = <
			/* Slave 1 reset value */
			0x114 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x118 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x11c (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x120 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x124 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x128 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x12c (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x130 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x134 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x138 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x13c (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x140 (PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

	davinci_mdio_default: davinci_mdio_default {
		pinctrl-single,pins = <
			/* MDIO */
			0x148 (PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE7)	/* mdio_data.mdio_data */
			0x14c (PIN_OUTPUT_PULLUP | MUX_MODE7)			/* mdio_clk.mdio_clk */
		>;
	};

	davinci_mdio_sleep: davinci_mdio_sleep {
		pinctrl-single,pins = <
			/* MDIO reset value */
			0x148 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x14c (PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

	mmc1_pins_default: pinmux_mmc1_pins {
		pinctrl-single,pins = <
			0x0F0 (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_dat3.mmc0_dat3 */
			0x0F4 (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_dat2.mmc0_dat2 */
			0x0F8 (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_dat1.mmc0_dat1 */
			0x0FC (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_dat0.mmc0_dat0 */
			0x100 (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_clk.mmc0_clk */
			0x104 (PIN_INPUT_PULLUP | MUX_MODE0)    /* mmc0_cmd.mmc0_cmd */
			0x1AC (PIN_INPUT_PULLUP | MUX_MODE7)    /* mcasp0_ahclkx.gpio3_21 */
			
		>;
	};

	mmc1_pins_sleep: pinmux_mmc1_pins_sleep {
		pinctrl-single,pins = <
			0x0F0 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x0F4 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x0F8 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x0FC (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x100 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x104 (PIN_INPUT_PULLDOWN | MUX_MODE7)
			0x1AC (PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};
	
	emmc_pins: pinmux_emmc {
		pinctrl-single,pins = <
			0x80 (PIN_INPUT_PULLUP | MUX_MODE2)	/* gpmc_csn1.mmc1_clk */
			0x84 (PIN_INPUT_PULLUP | MUX_MODE2)	/* gpmc_csn2.mmc1_cmd */
			0x00 (PIN_INPUT_PULLUP | MUX_MODE1)	/* gpmc_ad0.mmc1_dat0 */
			0x04 (PIN_INPUT_PULLUP | MUX_MODE1)	/* gpmc_ad1.mmc1_dat1 */
			0x08 (PIN_INPUT_PULLUP | MUX_MODE1)	/* gpmc_ad2.mmc1_dat2 */
			0x0c (PIN_INPUT_PULLUP | MUX_MODE1)	/* gpmc_ad3.mmc1_dat3 */
			0x10 (PIN_INPUT_PULLUP | MUX_MODE1)	/* gpmc_ad4.mmc1_dat4 */
			0x14 (PIN_INPUT_PULLUP | MUX_MODE1)	/* gpmc_ad5.mmc1_dat5 */
			0x18 (PIN_INPUT_PULLUP | MUX_MODE1)	/* gpmc_ad6.mmc1_dat6 */
			0x1c (PIN_INPUT_PULLUP | MUX_MODE1)	/* gpmc_ad7.mmc1_dat7 */
			/* EMMC nReset */
			0x78 (PIN_OUTPUT_PULLUP | MUX_MODE7)	/* gpmc_wpn.gpio1_28 */
		>;
	};
};
&gpio0 {
	status = "okay";
};
&gpio1 {
	status = "okay";
};
&gpio2 {
	status = "okay";
};
&gpio3 {
	status = "okay";
};

&uart0 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart0_pins>;
	status = "okay";
};

&i2c0 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c0_pins>;

	status = "okay";
	clock-frequency = <400000>;

	tps: tps@2d {
		reg = <0x24>;
	};
};

&usb {
	status = "okay";
};

&usb_ctrl_mod {
	status = "okay";
};

&usb0_phy {
	status = "okay";
};

&usb1_phy {
	status = "okay";
};

&usb0 {
	status = "okay";
};

&usb1 {
	status = "okay";
	dr_mode = "host";
};

&cppi41dma  {
	status = "okay";
};

&elm {
	status = "okay";
};

&gpmc {
	status = "okay";
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&nandflash_pins_default>;
	pinctrl-1 = <&nandflash_pins_sleep>;
	ranges = <0 0 0x08000000 0x1000000>;	/* CS0: 16MB for NAND */
	nand@0,0 {
		compatible = "ti,omap2-nand";
		reg = <0 0 4>; /* CS0, offset 0, IO size 4 */
		interrupt-parent = <&intc>;
		interrupts = <100>;
		ready-gpio = <&gpmc 0 GPIO_ACTIVE_HIGH>; /* gpmc_wait0 */
		ti,nand-ecc-opt = "bch8";
		ti,elm-id = <&elm>;
		nand-bus-width = <8>;
		gpmc,device-width = <1>;
		gpmc,sync-clk-ps = <0>;
		gpmc,cs-on-ns = <0>;
		gpmc,cs-rd-off-ns = <44>;
		gpmc,cs-wr-off-ns = <44>;
		gpmc,adv-on-ns = <6>;
		gpmc,adv-rd-off-ns = <34>;
		gpmc,adv-wr-off-ns = <44>;
		gpmc,we-on-ns = <0>;
		gpmc,we-off-ns = <40>;
		gpmc,oe-on-ns = <0>;
		gpmc,oe-off-ns = <54>;
		gpmc,access-ns = <64>;
		gpmc,rd-cycle-ns = <82>;
		gpmc,wr-cycle-ns = <82>;
		gpmc,bus-turnaround-ns = <0>;
		gpmc,cycle2cycle-delay-ns = <0>;
		gpmc,clk-activation-ns = <0>;
		gpmc,wr-access-ns = <40>;
		gpmc,wr-data-mux-bus-ns = <0>;
		/* MTD partition table */
		/* All SPL-* partitions are sized to minimal length
		 * which can be independently programmable. For
		 * NAND flash this is equal to size of erase-block */
		#address-cells = <1>;
		#size-cells = <1>;
		partition@0 {
			label = "NAND.SPL";
			reg = <0x00000000 0x000020000>;
		};
		partition@1 {
			label = "NAND.SPL.backup1";
			reg = <0x00020000 0x00020000>;
		};
		partition@2 {
			label = "NAND.SPL.backup2";
			reg = <0x00040000 0x00020000>;
		};
		partition@3 {
			label = "NAND.SPL.backup3";
			reg = <0x00060000 0x00020000>;
		};
		partition@4 {
			label = "NAND.u-boot-spl-os";
			reg = <0x00080000 0x00040000>;
		};
		partition@5 {
			label = "NAND.u-boot";
			reg = <0x000C0000 0x00100000>;
		};
		partition@6 {
			label = "NAND.u-boot-env";
			reg = <0x001C0000 0x00020000>;
		};
		partition@7 {
			label = "NAND.u-boot-env.backup1";
			reg = <0x001E0000 0x00020000>;
		};
		partition@8 {
			label = "NAND.kernel";
			reg = <0x00200000 0x00800000>;
		};
		partition@9 {
			label = "NAND.rootfs";
			reg = <0x00A00000 0x0D600000>;
		};
		partition@10 {
			label = "NAND.userdata";
			reg = <0x0E000000 0>;
		};		
	};
};


&mac {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&cpsw_default>;
	pinctrl-1 = <&cpsw_sleep>;
//	dual_emac = <1>;
//	active_slave = <1>;
	status = "okay";
};

//&davinci_mdio {
//	pinctrl-names = "default", "sleep";
//	pinctrl-0 = <&davinci_mdio_default>;
//	pinctrl-1 = <&davinci_mdio_sleep>;
//	status = "okay";
//};

&cpsw_emac0 {
	phy_id = <&mdio0>, <4>;
	phy-mode = "rgmii-txid";
//	dual_emac_res_vlan=<0>;
};

&tscadc {
	status = "okay";

	adc {
		ti,adc-channels = <0 1 2 3 4 5 6 7>;
	};
};

&mmc1 {
	status = "okay";
	vmmc-supply = <&vdd_3v3>;
	bus-width = <4>;
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&mmc1_pins_default>;
	pinctrl-1 = <&mmc1_pins_sleep>;
	cd-gpios = <&gpio3 21 GPIO_ACTIVE_HIGH>;
};

&mmc2 {
	/* eMMC (not populated) on MMC #2 */
	status = "disabled";
	pinctrl-names = "default";
	pinctrl-0 = <&emmc_pins>;
	vmmc-supply = <&vdd_3v3>;
	bus-width = <8>;
	ti,non-removable;
};

&sham {
	status = "okay";
};

&aes {
	status = "okay";
};

&gpio0 {
	status = "okay";
	ti,no-reset-on-init;
};

&gpio1 {
	status = "okay";
	ti,no-reset-on-init;
};

&gpio2 {
	status = "okay";
	ti,no-reset-on-init;
};

&gpio3 {
	status = "okay";
	ti,no-reset-on-init;
};

&wkup_m3_ipc {
	ti,scale-data-fw = "am335x-evm-scale-data.bin";
};

&rtc {
	system-power-controller;
};

&sgx {
	status = "disabled";
};
